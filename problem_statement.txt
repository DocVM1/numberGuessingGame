PROBLEM DESCRIPTION:
You are tasked with implementing a simple Number Guessing Game. The game should work as follows:

Range Selection: The user will choose a range of integers by specifying two numbers, A and B, 
    such that A < B. This range will define the possible values for the number the system selects.

System's Random Number: The system will randomly select a number between A and B, inclusive. 
    This number will remain hidden from the user.

User's Guessing: The user will repeatedly guess the number. After each guess:
    If the guess is lower than the randomly selected number, output "Your guess is too low. Try again."
    If the guess is higher than the randomly selected number, output "Your guess is too high. Try again."
    If the guess is correct, output "Congratulations! You've guessed the correct number."

Game Over: The game ends when the user guesses the correct number. At the end of the game, display the 
    total number of guesses the user made.

Play Again Option: Once the game ends, ask the user if they want to play again. If yes, restart the 
    game with a new random number and a new range. If no, the game should terminate.

REQUIREMENTS:
    Implement the game using a loop to allow multiple guesses.
    Ensure that the user inputs a valid range where A < B.
    Handle invalid user inputs, such as non-integer inputs or empty inputs.
    Track the number of guesses the user made.

EXAMPLE:
Suppose the user selects the range A = 10 and B = 20.
The system randomly selects a number, say 14.
The user might guess:

First guess: 8 → "Your guess is too low. Try again."
Second guess: 17 → "Your guess is too high. Try again."
Third guess: 14 → "Congratulations! You've guessed the correct number in 3 guesses."
After the correct guess, prompt the user: "Do you want to play again? (yes/no)"

FOLLOW UP QUESTIONS:
How would you handle the situation where the user enters a non-integer or invalid range?
Can you optimize the game for performance, especially when the range is very large? Would you consider using a binary search approach?